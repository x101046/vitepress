import{_ as e,H as t,G as a,aj as r}from"./chunks/framework.CDiOzltk.js";const m=JSON.parse('{"title":"介绍","description":"","frontmatter":{},"headers":[],"relativePath":"backend/node/nest/0-介绍.md","filePath":"backend/node/nest/0-介绍.md","lastUpdated":1742811043000}'),o={name:"backend/node/nest/0-介绍.md"},s=r('<h1 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h1><p><a href="https://docs.nestjs.com/" target="_blank" rel="noreferrer">官方文档</a>     <a href="https://nestjs.bootcss.com/" target="_blank" rel="noreferrer">中文文档1</a>     <a href="https://nest.nodejs.cn/" target="_blank" rel="noreferrer">中文文档2</a></p><p>Nest (NestJS) 是一个用于构建高效、可扩展的 <code>Node.js</code> 服务器端应用的框架。它使用渐进式 JavaScript，构建并完全支持 <code>TypeScript</code>（但仍然允许开发者使用纯 JavaScript 进行编码）并结合了 OOP（面向对象编程）、FP（函数式编程）和 FRP（函数式反应式编程）的元素。</p><p>在幕后，Nest 使用强大的 HTTP 服务器框架，如 <code>Express</code>（默认），也可以选择配置为使用 <code>Fastify</code>！</p>',4),n=[s];function c(d,_,p,i,l,h){return a(),t("div",null,n)}const b=e(o,[["render",c]]);export{m as __pageData,b as default};
